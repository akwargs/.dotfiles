"-------------------------------------------
set runtimepath+=~/.vim/
set nocompatible
filetype off
if empty(glob("$HOME/.vim/autoload/plug.vim"))
  silent ! powershell -Command "
        \ New-Item -Path "$env:HOME/.vim" -Name autoload -Type Directory -Force;
        \ Invoke-WebRequest
        \ -Uri 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
        \ -OutFile "$env:HOME/.vim/autoload/plug.vim"
        \ "
endif
"-------------------------------------------


"-------------------------------------------
" Have plugins
 if filereadable( expand("$HOME/.vim/autoload/plug.vim") )
   autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
     \| PlugInstall --sync | source $MYVIMRC
   \| endif
  "-------------------------------------------
  call plug#begin('$HOME/.vim/plugged')
  "-------------------------------------------
  " Plugins I know I want
  Plug 'tpope/vim-surround'
  Plug 'tpope/vim-commentary'
  Plug 'tpope/vim-fugitive'
  Plug 'tpope/vim-rsi'
  Plug 'tpope/vim-endwise'
  Plug 'junegunn/vim-easy-align'
  Plug 'godlygeek/tabular'
  Plug 'dbakker/vim-paragraph-motion'
  Plug 'sheerun/vim-polyglot'
  Plug 'Vimjas/vim-python-pep8-indent'
  Plug 'airblade/vim-gitgutter'
  Plug 'kshenoy/vim-signature'
  Plug 'axvr/photon.vim'
  Plug 'itchyny/lightline.vim'

  "-------------------------------------------
  " Plugins I'm not sure I want
  " Plug 'tpope/vim-repeat'
  " Plug 'tpope/vim-unimpaired'
  " Plug 'tpope/vim-eunuch'
  " Plug 'tpope/vim-abolish'
  " Plug 'tpope/vim-sleuth'
  " Plug 'tpope/vim-speeddating'
  " Plug 'inkarkat/vim-ReplaceWithRegister'
  " Plug 'tommcdo/vim-exchange'
  " Plug 'jlanzarotta/bufexplorer'
  " Plug 'editorconfig/editorconfig-vim'
  " Plug 'tpope/vim-ragtag'
  " Plug 'wellle/targets.vim'
  " Plug 'michaeljsmith/vim-indent-object'
  " Plug 'kana/vim-textobj-user'
  " Plug 'kana/vim-textobj-entire'
  " Plug 'tpope/vim-vinegar'
  call plug#end()
  "-------------------------------------------


  "-------------------------------------------
  " Related to plugins
  vnoremap <Enter> <Plug>(EasyAlign)
  let g:lightline = { 'colorscheme': 'one',
        \ 'separator': { 'left': "\ue0b0", 'right': "\ue0b2" },
        \ 'subseparator': { 'left': "\ue0b1", 'right': "\ue0b3" },
        \ }
  let g:python_highlight_all = 1
  function! Toggler()
    :GitGutterSignsToggle
  endfunction
  colorscheme antiphoton
  highlight clear specialkey
  highlight clear signcolumn
  highlight clear foldcolumn
endif
" End have plugins
"-------------------------------------------


"-------------------------------------------
" Begin standard vimrc
packadd! matchit
filetype plugin indent on
syntax on
let mapleader = " "
set background=light
set backup
set cmdheight=2
set clipboard=unnamed
set display=truncate
set encoding=utf-8
set expandtab
set fileformats=unix,dos
set foldmethod=syntax
set hidden
set history=100
set hls
set ignorecase
set incsearch
set infercase
" set iskeyword+=- " to make '-' a word character
" set iskeyword-=_ " to make '_' not a word character
set nolangremap
set laststatus=2
set linebreak
set list
set listchars=tab:»·,trail:·
set modelines=1
set mouse=
set nu rnu
if &diff
  set nornu nocul nocuc
endif
set pastetoggle=<F12>
set ruler
set shiftwidth=4
set showmatch
set noshowmode ""redundant with statusline
set signcolumn=yes
set smartcase
set smartindent
set softtabstop=4
set nostartofline
set t_Co=256
set tabstop=4
set textwidth=80
set timeout timeoutlen=3000 ttimeoutlen=100
set undodir=~/temp
set undofile
set visualbell
set whichwrap=<,>,h,l
set wildignorecase
set wildmenu
set wildmode=list:longest,full
set nowrapscan
"-------------------------------------------


"-------------------------------------------
" autocommands
au BufWinEnter * normal zR
augroup Python
  au!
  autocmd FileType python setlocal foldmethod=indent
augroup END
augroup Vim
  au!
  autocmd FileType vim setlocal sw=2 ts=2 sts=2 foldmethod=indent
augroup END
augroup Logs
  au!
  autocmd FileType log setlocal syntax=off
augroup END
augroup vimStartup
  au!
  autocmd BufReadPost *
    \ if line("'\"") >= 1 && line("'\"") <= line("$") && &ft !~# 'commit'
    \ |   exe "normal! g`\""
    \ | endif
augroup END
if !&diff
  augroup signcolumngroup
    au!
    autocmd BufEnter,FocusGained,InsertLeave * if &signcolumn == "yes" | set rnu | endif
    autocmd BufLeave,FocusLost,InsertEnter   * if &signcolumn == "yes" | set nornu | endif
  augroup END
endif
"-------------------------------------------


"-------------------------------------------
" Custom functions/commands without plugins
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
          \ | wincmd p | diffthis
endif
"-------------------------------------------


"-------------------------------------------
" Maps and abbreviations
map Q gq
inoremap <C-S> <Esc>:up<CR>gi
inoremap <C-U> <C-G>u<C-U>
inoremap <C-Z> <C-O>u
inoremap <S-Insert> <C-R>+
inoremap ..l -------------------------------------------<CR><CR>
inoremap ..d ============<C-R>=strftime("%Y-%m-%d %H:%M:%S")<CR>============<CR><CR>
nnoremap / /\v
nnoremap <C-W>e <C-W>=
nnoremap <C-W>= <C-W>-
nnoremap <C-W>- <C-W>s
nnoremap <C-W><bar> <C-W>v
nnoremap <C-W>c <C-L>
nnoremap <C-W>X <C-W>c
nnoremap <leader>jq :%!jq .<CR>
nnoremap <leader>Jq :%!jq . -c<CR>
nnoremap <leader>l  :nohl<CR>
nnoremap <silent> <leader>nn :exe "set nu! rnu! list!" \| call Toggler()<CR>
nnoremap <silent> <leader>cc :exe "set cc=" . (&cc == "" ? "80,120" : "")<CR>
nnoremap <silent> <leader>rr :exe "set rnu!"<CR>
nnoremap <silent> <leader>cl :exe "set cuc! cul!"<CR>
vnoremap <S-Del> "+x
vnoremap <C-Insert> "+y"
vnoremap <S-Insert> +gp
vnoremap // y/\V<C-R>=escape(@",'/\')<CR><CR>
vnoremap < <gv
vnoremap > >gv
iab <buffer> um µm
iab <buffer> usec µs
"-------------------------------------------


"-------------------------------------------
" GUI
if has('gui_running')
  set guifont=JetBrainsMonoNL_NFM_Light:h10:W200:cANSI:qDRAFT
  set guioptions=gmtTlar
  set mouse=nvi
  set mousehide
  set columns=130 lines=35
  map <ScrollWheelUp>   <C-Y>
  map <ScrollWheelDown> <C-E>
endif
"-------------------------------------------
" vim:ft=vim:tw=0:sw=2:ts=2:sts=2:nowrap
