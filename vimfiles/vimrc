if empty(glob('~/.vim/autoload/plug.vim'))
  if has('win32')
    silent !curl -fLo \%HOME\%/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  else
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  endif
endif
"-------------------------------------------


"-------------------------------------------
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
      \| PlugInstall --sync | source $MYVIMRC
      \| endif
"-------------------------------------------
if has('win32')
  set rtp+=~/.vim  " windows uses ~/vimfiles by default
endif
call plug#begin("$HOME/.vim/plugged")
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rsi'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-speeddating'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-vinegar'
Plug 'godlygeek/tabular'
Plug 'dbakker/vim-paragraph-motion'
Plug 'farmergreg/vim-lastplace'
Plug 'airblade/vim-gitgutter'
Plug 'kshenoy/vim-signature'
Plug 'jlanzarotta/bufexplorer'
Plug 'frioux/vim-regedit'
Plug 'vimwiki/vimwiki'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'sheerun/vim-polyglot'
Plug 'Vimjas/vim-python-pep8-indent'
Plug 'mbbill/undotree'
Plug 'axvr/photon.vim'
call plug#end()
"-------------------------------------------


"-------------------------------------------
" custom functions
function! Toggler()
  :GitGutterSignsToggle
endfunction
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
          \ | wincmd p | diffthis
endif
"-------------------------------------------


"-------------------------------------------
" Begin standard vimrc
packadd! matchit
let mapleader = " "
set background=light
set backup
set cmdheight=2
set display=truncate
set encoding=utf-8
set expandtab
set fileformats=unix,dos
set hidden
set history=100
set hlsearch
set ignorecase
set incsearch
set infercase
" set iskeyword+=- " to make '-' a word character
" set iskeyword-=_ " to make '_' not a word character
set nolangremap
set laststatus=2
set linebreak
set list
set listchars=tab:»·,trail:·
set modelines=1
set mouse=
set nu rnu
if &diff
  set nornu nocul nocuc
endif
set omnifunc=syntaxcomplete#Complete
set pastetoggle=<F12>
set ruler
set shiftwidth=4
set signcolumn=yes
set smartcase
set showmatch
set showmode
set smartindent
set softtabstop=4
set nostartofline
set statusline=%<%f%=\ %{fugitive#statusline()}\ %1*%M%*%{','.&fileformat}%R%Y,L:%l/%L,C:%c%V
set t_Co=256
set tabstop=4
set textwidth=80
set ttimeoutlen=300
set visualbell
set undofile
set whichwrap=<,>,h,l
set wildignorecase
set wildmenu
set wildmode=list:longest,full
set nowrapscan
"-------------------------------------------


"-------------------------------------------
" Maps and abbreviations
map Q gq
inoremap <C-u> <C-G>u<C-u>
inoremap <C-s> <Esc>:up<CR>gi
inoremap <C-z> <C-O>u
inoremap <S-Insert> <C-R>+
" micron is <C-k>m*
inoremap `u μ
inoremap `l -------------------------------------------<CR><CR>
inoremap `d ============<C-R>=strftime("%Y-%m-%d %H:%M:%S")<CR>============<CR><CR>
nnoremap / /\v
nnoremap ? ?\v
nnoremap <C-l>  :nohl<CR><C-l>
nnoremap J mzJ`z
nnoremap <C-u> <C-u>zz
nnoremap <C-d> <C-d>zz
nnoremap <leader>l  :nohl<CR><C-l>
nnoremap <leader>jq :%!jq .<CR>
nnoremap <leader>Jq :%!jq . -c<CR>
nnoremap <silent> <leader>cc :exe "set cc=" . (&cc == "" ? "80,120" : "")<CR>
nnoremap <silent> <leader>rr :exe "set rnu!"<CR>
nnoremap <silent> <leader>cl :exe "set cuc! cul!"<CR>
nnoremap <silent> <leader>nn :exe "set nu! rnu! list!" \| call Toggler()<CR>
vnoremap <leader>a= :Tabularize /=<CR>
vnoremap <leader>a: :Tabularize /:\zs<CR>
vnoremap <S-Insert> +gp
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
vnoremap < <gv
vnoremap > >gv
xnoremap <leader>p "_dPa
iab <buffer> Francais Français
"-------------------------------------------


"-------------------------------------------
" autocommands
augroup Vim
  au!
  autocmd FileType vim setlocal sw=2 ts=2 sts=2 tw=0 nowrap
augroup END
if !&diff
  augroup SignColumnGroup
    au!
    autocmd BufEnter,FocusGained,InsertLeave * if &signcolumn == "yes" | set nu rnu | endif
    autocmd BufLeave,FocusLost,InsertEnter   * if &signcolumn == "yes" | set nornu | endif
  augroup END
endif
augroup InsertFocus
  au!
  au InsertEnter,InsertLeave * set cul! cuc!
augroup END
"-------------------------------------------


"-------------------------------------------
" nvim vs vim stuff
if has('nvim')
  set shell=powershell
  set undodir=~/temp/nvim
  augroup Terminal
    au!
    au TermOpen,TermEnter * setlocal nonu nornu nolist scl=no
  augroup END
else
  set undodir=~/temp/vim
endif
"-------------------------------------------


"-------------------------------------------
" Colorscheme
colorscheme antiphoton
highlight clear SpecialKey
highlight clear SignColumn
highlight clear FoldColumn
"-------------------------------------------


"-------------------------------------------
" GUI
if has('gui_running')
  set guifont=JetBrainsMonoNL_NFM_Light:h10:W200:cANSI:qDRAFT
  set guioptions=gmtTlar
  set mouse=nvi
  set mousehide
  set columns=130 lines=35
  map <ScrollWheelUp>   <C-Y>
  map <ScrollWheelDown> <C-E>
endif
"-------------------------------------------


"-------------------------------------------
" Plugin specific settings
let g:vimwiki_listsyms = '󰂎󰁻󰁽󰂁'
let g:vimwiki_list = [{'path': '~/vimwiki/',
                     \ 'links_space_char': '_',
                     \ }]
let g:python_highlight_all = 1
nnoremap <F9> :UndotreeToggle<CR>
" Note re links_space_char https://github.com/vimwiki/vimwiki/issues/1031
"-------------------------------------------
