-- vim:sw=2:ts=2:tw=0
local wezterm = require 'wezterm'
local act = wezterm.action
return {
  term = 'xterm-256color',
  default_prog = { 'pwsh', '-NoLogo' },
  window_padding = {
    left = 20,
  },
  color_scheme = [[Github Dark (Gogh)]],
  initial_cols = 150,
  initial_rows = 30,
  -- use_fancy_tab_bar = false,
  hide_tab_bar_if_only_one_tab = false,
  tab_bar_at_bottom = true,
  scrollback_lines = 20000,
	font = wezterm.font("CodeNewRoman Nerd Font"),
	font_rules = {
			{
					intensity = 'Normal',
					italic = true,
					font = wezterm.font("VictorMono Nerd Font Propo", {weight="DemiBold", stretch="Normal", style="Italic"})
			},
			{
					intensity = 'Bold',
					italic = false,
					font = wezterm.font("VictorMono Nerd Font Propo", {weight="Bold", stretch="Normal", style="Italic"})
			},
			{
					intensity = 'Bold',
					italic = true,
					font = wezterm.font("VictorMono Nerd Font Propo", {weight="Bold", stretch="Normal", style="Italic"})
			},
			{
					intensity = 'Half',
					italic = true,
					font = wezterm.font("VictorMono Nerd Font Propo", {weight="Light", stretch="Normal", style="Italic"})
			},
	},
  font_size = 12.0,
  selection_word_boundary = '{}[]|\\()"\'`.,;: <>',
  leader = { key = 'b', mods = 'CTRL', timeout_milliseconds = 1000 },
  keys = {
    { key = 'b',  mods = 'LEADER', action = act { SendString = '' } },
    { key = '-',  mods = 'LEADER', action = act { SplitVertical = { domain = 'CurrentPaneDomain' } } },
    { key = '\\', mods = 'LEADER', action = act.SplitHorizontal { domain = 'CurrentPaneDomain' } },
    { key = 'z',  mods = 'LEADER', action = 'TogglePaneZoomState' },
    { key = 'c',  mods = 'LEADER', action = act { SpawnTab = 'CurrentPaneDomain' } },
    { key = 'h',  mods = 'LEADER', action = act.ActivatePaneDirection 'Left' },
    { key = 'j',  mods = 'LEADER', action = act.ActivatePaneDirection 'Down' },
    { key = 'k',  mods = 'LEADER', action = act.ActivatePaneDirection 'Up' },
    { key = 'l',  mods = 'LEADER', action = act.ActivatePaneDirection 'Right' },
    { key = 'H',  mods = 'LEADER', action = act { AdjustPaneSize = { 'Left', 5 } } },
    { key = 'J',  mods = 'LEADER', action = act { AdjustPaneSize = { 'Down', 5 } } },
    { key = 'K',  mods = 'LEADER', action = act { AdjustPaneSize = { 'Up', 5 } } },
    { key = 'L',  mods = 'LEADER', action = act { AdjustPaneSize = { 'Right', 5 } } },
    { key = '`',  mods = 'LEADER', action = act.ActivateLastTab },
    { key = ' ',  mods = 'LEADER', action = act.ActivateTabRelative(1) },
    { key = 'n',  mods = 'LEADER', action = act.ActivateTabRelative(1) },
    { key = 'p',  mods = 'LEADER', action = act.ActivateTabRelative(-1) },
    { key = '1',  mods = 'LEADER', action = act { ActivateTab = 0 } },
    { key = '2',  mods = 'LEADER', action = act { ActivateTab = 1 } },
    { key = '3',  mods = 'LEADER', action = act { ActivateTab = 2 } },
    { key = '4',  mods = 'LEADER', action = act { ActivateTab = 3 } },
    { key = '5',  mods = 'LEADER', action = act { ActivateTab = 4 } },
    { key = '6',  mods = 'LEADER', action = act { ActivateTab = 5 } },
    { key = '7',  mods = 'LEADER', action = act { ActivateTab = 6 } },
    { key = '8',  mods = 'LEADER', action = act { ActivateTab = 7 } },
    { key = '9',  mods = 'LEADER', action = act { ActivateTab = 8 } },
    { key = '0',  mods = 'LEADER', action = act { ActivateTab = 9 } },
    { key = 'x',  mods = 'LEADER', action = act { CloseCurrentPane = { confirm = true } } },
    { key = '[',  mods = 'LEADER', action = act.ActivateCopyMode },
    { key = ']',  mods = 'LEADER', action = act.PasteFrom 'PrimarySelection' },
  },
  key_tables = {
    copy_mode = {
      { key = 'c',          mods = 'CTRL',  action = act.CopyMode 'Close' },
      { key = 'g',          mods = 'CTRL',  action = act.CopyMode 'Close' },
      { key = 'q',          mods = 'NONE',  action = act.CopyMode 'Close' },
      { key = 'Escape',     mods = 'NONE',  action = act.CopyMode 'Close' },
      { key = 'h',          mods = 'NONE',  action = act.CopyMode 'MoveLeft' },
      { key = 'j',          mods = 'NONE',  action = act.CopyMode 'MoveDown' },
      { key = 'k',          mods = 'NONE',  action = act.CopyMode 'MoveUp' },
      { key = 'l',          mods = 'NONE',  action = act.CopyMode 'MoveRight' },
      { key = 'LeftArrow',  mods = 'NONE',  action = act.CopyMode 'MoveLeft' },
      { key = 'DownArrow',  mods = 'NONE',  action = act.CopyMode 'MoveDown' },
      { key = 'UpArrow',    mods = 'NONE',  action = act.CopyMode 'MoveUp' },
      { key = 'RightArrow', mods = 'NONE',  action = act.CopyMode 'MoveRight' },
      { key = 'RightArrow', mods = 'ALT',   action = act.CopyMode 'MoveForwardWord' },
      { key = 'f',          mods = 'ALT',   action = act.CopyMode 'MoveForwardWord' },
      { key = 'Tab',        mods = 'NONE',  action = act.CopyMode 'MoveForwardWord' },
      { key = 'w',          mods = 'NONE',  action = act.CopyMode 'MoveForwardWord' },
      { key = 'LeftArrow',  mods = 'ALT',   action = act.CopyMode 'MoveBackwardWord' },
      { key = 'b',          mods = 'ALT',   action = act.CopyMode 'MoveBackwardWord' },
      { key = 'Tab',        mods = 'SHIFT', action = act.CopyMode 'MoveBackwardWord' },
      { key = 'b',          mods = 'NONE',  action = act.CopyMode 'MoveBackwardWord' },
      { key = '0',          mods = 'NONE',  action = act.CopyMode 'MoveToStartOfLine' },
      { key = 'Enter',      mods = 'NONE',  action = act.CopyMode 'MoveToStartOfNextLine' },
      { key = '$',          mods = 'NONE',  action = act.CopyMode 'MoveToEndOfLineContent' },
      { key = '$',          mods = 'SHIFT', action = act.CopyMode 'MoveToEndOfLineContent' },
      { key = '^',          mods = 'NONE',  action = act.CopyMode 'MoveToStartOfLineContent' },
      { key = '^',          mods = 'SHIFT', action = act.CopyMode 'MoveToStartOfLineContent' },
      { key = 'm',          mods = 'ALT',   action = act.CopyMode 'MoveToStartOfLineContent' },
      { key = ' ',          mods = 'NONE',  action = act.CopyMode { SetSelectionMode = 'Cell' } },
      { key = 'v',          mods = 'NONE',  action = act.CopyMode { SetSelectionMode = 'Cell' } },
      { key = 'V',          mods = 'NONE',  action = act.CopyMode { SetSelectionMode = 'Line' } },
      { key = 'V',          mods = 'SHIFT', action = act.CopyMode { SetSelectionMode = 'Line' } },
      { key = 'v',          mods = 'CTRL',  action = act.CopyMode { SetSelectionMode = 'Block' } },
      { key = 'G',          mods = 'NONE',  action = act.CopyMode 'MoveToScrollbackBottom' },
      { key = 'G',          mods = 'SHIFT', action = act.CopyMode 'MoveToScrollbackBottom' },
      { key = 'g',          mods = 'NONE',  action = act.CopyMode 'MoveToScrollbackTop' },
      { key = 'H',          mods = 'NONE',  action = act.CopyMode 'MoveToViewportTop' },
      { key = 'H',          mods = 'SHIFT', action = act.CopyMode 'MoveToViewportTop' },
      { key = 'M',          mods = 'NONE',  action = act.CopyMode 'MoveToViewportMiddle' },
      { key = 'M',          mods = 'SHIFT', action = act.CopyMode 'MoveToViewportMiddle' },
      { key = 'L',          mods = 'NONE',  action = act.CopyMode 'MoveToViewportBottom' },
      { key = 'L',          mods = 'SHIFT', action = act.CopyMode 'MoveToViewportBottom' },
      { key = 'o',          mods = 'NONE',  action = act.CopyMode 'MoveToSelectionOtherEnd' },
      { key = 'O',          mods = 'NONE',  action = act.CopyMode 'MoveToSelectionOtherEndHoriz' },
      { key = 'O',          mods = 'SHIFT', action = act.CopyMode 'MoveToSelectionOtherEndHoriz' },
      { key = 'PageUp',     mods = 'NONE',  action = act.CopyMode 'PageUp' },
      { key = 'PageDown',   mods = 'NONE',  action = act.CopyMode 'PageDown' },
      { key = 'b',          mods = 'CTRL',  action = act.CopyMode 'PageUp' },
      { key = 'f',          mods = 'CTRL',  action = act.CopyMode 'PageDown' },
      { key = 'u',          mods = 'CTRL',  action = act.CopyMode 'PageUp' },
      { key = 'd',          mods = 'CTRL',  action = act.CopyMode 'PageDown' },
      {
        key = 'y',
        mods = 'NONE',
        action = act.Multiple {
          act.CopyTo 'ClipboardAndPrimarySelection',
          act.CopyMode 'Close',
        },
      },
      { key = '/', mods = 'NONE', action = act { Search = { CaseSensitiveString = '' } } },
      { key = '?', mods = 'NONE', action = act { Search = { CaseInSensitiveString = '' } } },
      { key = 'n', mods = 'CTRL', action = act { CopyMode = 'NextMatch' } },
      { key = 'p', mods = 'CTRL', action = act { CopyMode = 'PriorMatch' } },
    },
    search_mode = {
      { key = 'Escape', mods = 'NONE', action = act { CopyMode = 'Close' } },
      { key = 'Enter',  mods = 'NONE', action = 'ActivateCopyMode' },
      { key = 'c',      mods = 'CTRL', action = 'ActivateCopyMode' },
      { key = 'n',      mods = 'CTRL', action = act { CopyMode = 'NextMatch' } },
      { key = 'p',      mods = 'CTRL', action = act { CopyMode = 'PriorMatch' } },
      { key = 'r',      mods = 'CTRL', action = act.CopyMode 'CycleMatchType' },
      { key = 'u',      mods = 'CTRL', action = act.CopyMode 'ClearPattern' },
    },
  },
}
